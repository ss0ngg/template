#include <iostream>
#include <vector>

using namespace std;

template <typename T>


class SimpleVector {
private:
	T* data;				// 동적 배열을 위한 포인터
	int currentSize;		// 벡터의 현재 저장된 원소의 개수
	int currentCapacity;	// 벡터의 용량
	void resize();

public:
	// 기본 생성자 : 크기가 10인 배열 생성
	SimpleVector() : currentSize(0), currentCapacity(10) {
		data = new T[10];
	}
	
	// 크기를 지정하여 생성 : 해당 크기의 배열을 생성
	SimpleVector(int capacity) : currentSize(0), currentCapacity(capacity) {
		data = new T[capacity];
	}

	// 소멸자
	~SimpleVector() {
		delete[] data;
	}

	// 요소 추가
	void push_back(const T& value) {
		if (currentSize >= currentCapacity)
			data[currentSize] = value;
		currentSize++;
	}
	// 요소 제거
	void pop_back() {
		if (currentSize > 0) {
			currentSize--;
		}
	}
	// 원소 개수 반환
	int size() {
		return currentSize;
	}
	
	// 용량을 반환
	int capacity() {
		return currentCapacity;
	}
};
